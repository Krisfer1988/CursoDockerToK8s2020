---
apiVersion: v1
kind: ConfigMap
metadata:
    name: configfilebeat
data:
    filebeat.yml: |
        filebeat.inputs:
        - type: log
          paths:
            - /logs/access_log 
        output.logstash:
          hosts: ["serviciologstash:5044"]
---
apiVersion: v1
kind: Pod
metadata:
    name: podapache
    labels: 
        app: apache
spec:
    containers:
        - name: contenedorapache
          image: httpd
          command: ["/bin/bash"]
          args: ["-c", "cp /apache/httpd.conf /usr/local/apache2/conf && httpd-foreground"]
          ports:
            - containerPort: 80
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: configapache
              mountPath: /apache
        - name: contenedorfilebeat
          image: docker.elastic.co/beats/filebeat:7.8.0
          volumeMounts:
            - name: logs
              mountPath: /logs
            - name: volconfigfilebeat
              mountPath: /usr/share/filebeat/filebeat.yml
              subPath: filebeat.yml
    initContainers: 
        - name: clonadorconfigapache
          image: ubuntu
          command: ['sh' , '-c' , 'apt update -y && apt install git -y && git clone https://github.com/IvanciniGT/dockerToKubernetes_ApacheConfig /apache']
          volumeMounts:
            - name: configapache
              mountPath: /apache    
    volumes:
        - name: logs
          emptyDir: 
            medium: Memory         
        - name: configapache
          emptyDir: {}
        - name: volconfigfilebeat
          configMap:
            name: configfilebeat
            items:
                - key: filebeat.yml
                  path: filebeat.yml
---
apiVersion: v1
kind: Service
metadata: 
    name: servicioapache
spec:
    ports:
        - targetPort: 80
          port: 8080
    selector:
        app: apache
    type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
    name: configuracionlogstash
data:
    MONITORING_ENABLED: 'false'
    logstash.conf: |
        input {
            beats {
                port => "5044"
            }
        }
        filter {
            mutate {
                remove_field => [ "@timestamp","agent" ]
            }
            grok {
                match => { "message" => "%{COMBINEDAPACHELOG}"}
            }
            mutate {
                convert => [ "bytes","integer" ]
                convert => [ "response","integer" ]
            }
            geoip{
                 source => "clientip"
                 target => "geoip"
            }
            date{
                 match => [ "timestamp", "dd/MMM/yy:HH:mm:ss Z"]
            }
        }
        output {
            stdout { codec => rubydebug }
        }
---
apiVersion: v1
kind: Pod
metadata: 
    name: podlogstash
    labels:
        app: logstash
spec:
    containers:
        - name: contenedor_logstash
          image: docker.elastic.co/logstash/logstash:7.8.0
          ports:
            - containerPort: 5044
          env:
            - name: MONITORING_ENABLED
              valueFrom:
                configMapKeyRef:
                    name: configuracionlogstash
                    key: MONITORING_ENABLED
          volumeMounts:
            - name: volconfiglogstash
              mountPath: /usr/share/logstash/pipeline/logstash.conf
              subPath: logstash.conf
    volumes:
        - name: volconfiglogstash
          configMap:
            name: configlogstash
            items:
                - key: logstash.conf
                  path: logstash.conf          
